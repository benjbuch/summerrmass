% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_helpers.R
\name{import_layout_from_paths}
\alias{import_layout_from_paths}
\title{Import an experiment layout from nested directories.}
\usage{
import_layout_from_paths(
  paths,
  pivot = "[0-9]_[A-Z]+[0-9]+",
  relative_to = getwd()
)
}
\arguments{
\item{paths}{A list character vector or list of file paths. See Details}

\item{pivot}{A \link[base:regex]{regular expression} describing the
name of a single folder in each tree up to which "groups" and from which
"replicates" are established. See Details.}

\item{relative_to}{If not \code{NULL}, this subpath is hidden from the paths
for all operations; "" to suppress hiding; \code{NULL} will hide the subpath
that is common in all elements of \code{paths}.}
}
\value{
A tibble with the experiment layout as determined from the \code{paths}
with columns
\code{grp_0}, ..., \code{grp_N} specifiying the sample groups,
\code{sub_1}, ..., \code{sub_N} specifiying the subfolder nesting,
\code{pivot},
\code{replicate} and \code{n_replicates}, based on \code{sub_1},
the \code{path} of the file relative to \code{relative_to} and its original
position in \code{paths} as \code{findex}.
}
\description{
Some data is organized in folders that contain files with similar or even
identical names. Given a list of paths pointing to those files, the layout
of the experiment is established from the nesting of folders.
}
\details{
\code{paths} can be a vector such as \code{c("path1", "path2", "path3")}
or a list of character vectors, e.g. as a result of averaging data, such as
\code{list(c("path1", "path2"), "path3")}. The latter case is usually not
exposed to the user; the algorithm applies to "path1" and "path3".

\code{pivot} must be a unique match for each path. Nesting above and within
the matched folder can differ from path to path; care is taken to handle the
grouping accordingly.

If \code{pivot} is a regular expression with lookahead or lookbehind, these
elements are kept

\code{relative_to} is (like all \code{paths}) expanded before being hidden.
It is preserved as \code{attr(., "dir")} for future use.

\subsection{Sample groups by nesting parent folders}{

Sample groups are determined from the enclosing (parent) folders. For example,
in

\preformatted{
/common1/folder1/folderA/0_A1/...
                      ../0_A2/...
              ../folderB/0_A1/...
/common1/folder2/folderA/0_A1/...
              ../folderB/0_A1/...
                        /0_A2/...
}

two nested groupings are identified: (1) "folder1" and "folder2" as \code{grp_0},
and (2) "folderA" and "folderB" as \code{grp_1}. The common path "common1"
will not be used as a grouping variable. The first parent is always used as a
grouping variable. The full (unique) grouping is returned under \code{group}.

Grouping can allow to anaylze multiple directories simultaneously with their
own set of parameters enclosed at an appropriate level of nesting.

} % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %

\subsection{Replicates by nesting subfolders}{

Sample replicates are determined from the enclosed (child) folders. For example,
in

\preformatted{
../0_A1/1/targetfile
       /2/targetfile
../0_A2/1/targetfile
}

the first pivot ("0_A1") contains two replicates, the second pivot ("0_A2") one.

} % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % %
}
\examples{
import_layout_from_paths(c("folderA/0_A1/1/file.x", "folderA/0_A1/2/file.x",
  "folderA/0_A2/1/file.x", "folderB/0_A1/1/file.x")

}
